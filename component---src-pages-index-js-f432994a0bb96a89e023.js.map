{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/head.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_head__WEBPACK_IMPORTED_MODULE_4__","keywords","map","_ref","node","frontmatter","fields","slug","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","__PATH_PREFIX__","textDecoration","color","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","bodyAttributes","class","titleTemplate","name","content","concat","length","join","rel","href","withPrefix","data-prism","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-f432994a0bb96a89e023.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/head'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={['blog', 'gatsby', 'javascript', 'react']}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3>\n                <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___title], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1>\n          <Link to={'/'}>{title}</Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3>\n          <Link\n            style={{\n              boxShadow: 'none',\n              textDecoration: 'none',\n              color: 'inherit',\n            }}\n            to={'/'}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div>\n        {header}\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql, withPrefix } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            bodyAttributes={{\n              class: 'spectrum spectrum--light',\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          >\n            <link rel=\"stylesheet\" href={withPrefix('css/docs.css')} />\n            <link rel=\"stylesheet\" href={withPrefix('spectrum-light.css')} />\n            <link\n              rel=\"stylesheet\"\n              href={withPrefix('css/vendor/prism.css')}\n              data-prism\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}